<diagram program="umletino" version="15.0.0"><zoom_level>10</zoom_level><help_text>Space for diagram notes</help_text><element><id>UMLClass</id><coordinates><x>160</x><y>0</y><w>210</w><h>270</h></coordinates><panel_attributes>&lt;&lt;Player&gt;&gt;
--
-int id: 
-String Name
-String Surname
-double Score
-ArrayList&lt;Achievements&gt; playerPlayed
--
+Getters and Setters
+calculateScore()
+copyPlayer()
+deleteAchievement()
+addAchievement()
--
Responsibilities
-- Holding player data
-- Calculating Player Score
-- Setting player spesific states</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>250</x><y>260</y><w>30</w><h>110</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;90;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>160</x><y>350</y><w>210</w><h>110</h></coordinates><panel_attributes>&lt;&lt;Admin&gt;&gt;
--
.super()
--
changePlayer(Player change)
clonePlayer()
--
Responsibilities
-- Will change and clone player data as an admin shadow</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>510</x><y>10</y><w>210</w><h>240</h></coordinates><panel_attributes>&lt;&lt;Statistics&gt;&gt;
--
- static double pi
- static double degreeOfFreedom
- static double Variance
- static double fuzinessConstant
- Arraylist&lt;Player&gt; allPlayers
--
+getTopFive()
+calculateVariance()
+calculateConsistency(Player p)
+calculateTrend(Player p)
+calculateReactionFrequency()
--
Responsibilities
--This class calculates all statistical data generated from player input as an output</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>360</x><y>130</y><w>170</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;150;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>500</x><y>310</y><w>220</w><h>300</h></coordinates><panel_attributes>&lt;&lt;Achievements&gt;&gt;
--
- String name
- String playerNote
- String type
- double playerInterreactionNumber
- boolean isCompleted
- ArrayList&lt;Interreaction&gt; allInput
-
--
+ Setters &amp; Getters
+ addInterreaction(Date interreacted, String 
PlayerResponse,
double PlayerResponseDegree)
+ deleteInterreaction(Interreaction deleting)
+ calculatePlayerInterreactionNumber()
+ addPlayerNote()
+ 
--
Responsibilities
-- Holds data for all the interreactions 
under the given achievement</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>500</x><y>670</y><w>210</w><h>140</h></coordinates><panel_attributes>&lt;&lt;Interreaction&gt;&gt;
--
- Date interreacted
- String playerResponse
- double playerResponseDegree
-
--
(used only for instantiation)
--
Responsibilities
-- holds data for player interreaction</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>360</x><y>230</y><w>160</w><h>150</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>140;130;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>590</x><y>600</y><w>30</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;70;10;10</additional_attributes></element></diagram>